document.addEventListener('DOMContentLoaded', function() {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
  const tgWebApp = window.Telegram.WebApp;
  tgWebApp.expand();
  tgWebApp.enableClosingConfirmation();
  
  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º—ã Telegram
  if (tgWebApp.colorScheme === 'dark') {
    document.body.classList.add('dark-theme');
  }
  
  // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
  const connectWalletBtn = document.getElementById('connect-wallet-btn');
  const walletStatus = document.getElementById('wallet-status');
  const paymentBtn = document.getElementById('payment-btn');
  const paymentStatus = document.getElementById('payment-status');
  const walletConnectedSpan = document.getElementById('wallet-connected');
  const paymentCompletedSpan = document.getElementById('payment-completed');
  const eligibilityStatusSpan = document.getElementById('eligibility-status');
  const submitBtn = document.getElementById('submit-btn');
  
  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  const TON_PAYMENT_AMOUNT = 0.5;
  
  // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userData = {
    userId: tgWebApp.initDataUnsafe?.user?.id || 0,
    walletConnected: false,
    walletAddress: null,
    paymentCompleted: false
  };
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
  function updateUI() {
    // Wallet status
    if (userData.walletConnected) {
      walletStatus.textContent = `–ü–æ–¥–∫–ª—é—á–µ–Ω: ${userData.walletAddress.slice(0, 6)}...${userData.walletAddress.slice(-4)}`;
      walletConnectedSpan.textContent = '‚úÖ';
      walletConnectedSpan.className = 'success';
      connectWalletBtn.textContent = '–ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω';
      connectWalletBtn.disabled = true;
      paymentBtn.disabled = false;
      paymentStatus.textContent = '–ì–æ—Ç–æ–≤ –∫ –æ–ø–ª–∞—Ç–µ';
    } else {
      walletStatus.textContent = '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω';
      walletConnectedSpan.textContent = '‚ùå';
      walletConnectedSpan.className = 'error';
      connectWalletBtn.disabled = false;
      paymentBtn.disabled = true;
      paymentStatus.textContent = '–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞';
    }
    
    // Payment status
    if (userData.paymentCompleted) {
      paymentCompletedSpan.textContent = '‚úÖ';
      paymentCompletedSpan.className = 'success';
      paymentBtn.textContent = '–û–ø–ª–∞—á–µ–Ω–æ';
      paymentBtn.disabled = true;
      paymentStatus.textContent = '–û–ø–ª–∞—á–µ–Ω–æ';
      submitBtn.disabled = false;
    } else {
      paymentCompletedSpan.textContent = '‚ùå';
      paymentCompletedSpan.className = 'error';
      paymentBtn.disabled = !userData.walletConnected;
      submitBtn.disabled = true;
    }
    
    // Eligibility status
    if (userData.walletConnected && userData.paymentCompleted) {
      eligibilityStatusSpan.textContent = '–ò–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ! üéâ';
      eligibilityStatusSpan.className = 'success';
    } else {
      eligibilityStatusSpan.textContent = '–ù–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞';
      eligibilityStatusSpan.className = 'error';
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
  async function connectWallet() {
    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ TON
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ton-connect –∏–ª–∏ –¥—Ä—É–≥–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
      
      // –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
      tgWebApp.showPopup({
        title: '–í—ã–±–æ—Ä –∫–æ—à–µ–ª—å–∫–∞',
        message: '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ TON:',
        buttons: [
          {
            id: 'tonkeeper',
            type: 'default',
            text: 'Tonkeeper'
          },
          {
            id: 'tonhub',
            type: 'default',
            text: 'Tonhub'
          },
          {
            id: 'cancel',
            type: 'cancel',
            text: '–û—Ç–º–µ–Ω–∞'
          }
        ]
      }, function(buttonId) {
        if (buttonId === 'cancel') return;
        
        // –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
        setTimeout(() => {
          // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–µ–π–∫–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–∞ TON
          const walletAddress = 'UQ' + [...Array(64)].map(() => Math.floor(Math.random() * 16).toString(16)).join('');
          
          // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
          userData.walletConnected = true;
          userData.walletAddress = walletAddress;
          
          // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
          updateWalletOnServer(walletAddress);
          
          // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
          updateUI();
          
          tgWebApp.showPopup({
            title: '–ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω',
            message: '–í–∞—à TON –∫–æ—à–µ–ª–µ–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω.',
            buttons: [{ type: 'ok' }]
          });
        }, 1500);
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞:', error);
      walletStatus.textContent = `–û—à–∏–±–∫–∞: ${error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫'}`;
      walletStatus.className = 'error';
      
      tgWebApp.showPopup({
        title: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –≤–∞—à –∫–æ—à–µ–ª–µ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
        buttons: [{ type: 'ok' }]
      });
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –æ–ø–ª–∞—Ç—ã
  async function makePayment() {
    if (!userData.walletConnected) {
      tgWebApp.showPopup({
        title: '–û—à–∏–±–∫–∞',
        message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ TON.',
        buttons: [{ type: 'ok' }]
      });
      return;
    }
    
    // –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã
    const paymentAddress = "UQD7tZfGymvepTgjBQYNeFIR-5IWj3P276uYgH0U_8p3B7QM";
    
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const transactionId = `NVX_AIRDROP_${userData.userId}_${new Date().getTime()}`;
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å TON Pay –∏–ª–∏ –¥—Ä—É–≥–æ–π –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
    
    tgWebApp.showPopup({
      title: '–û–ø–ª–∞—Ç–∞ —É—á–∞—Å—Ç–∏—è',
      message: `–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∞–∏—Ä–¥—Ä–æ–ø–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ${TON_PAYMENT_AMOUNT} TON –Ω–∞ –∫–æ—à–µ–ª–µ–∫:\n\n${paymentAddress}\n\n–° –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º: ${transactionId}`,
      buttons: [
        {
          id: 'payment_confirmed',
          type: 'default',
          text: '–Ø –æ–ø–ª–∞—Ç–∏–ª(–∞)'
        },
        {
          id: 'cancel',
          type: 'cancel',
          text: '–û—Ç–º–µ–Ω–∞'
        }
      ]
    }, function(buttonId) {
      if (buttonId === 'cancel') return;
      
      if (buttonId === 'payment_confirmed') {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ API –±–ª–æ–∫—á–µ–π–Ω–∞ TON
        // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –º—ã –ø—Ä–æ—Å—Ç–æ –æ—Ç–º–µ—Ç–∏–º –æ–ø–ª–∞—Ç—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é
        
        // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
        setTimeout(() => {
          userData.paymentCompleted = true;
          
          // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
          updatePaymentOnServer(transactionId, TON_PAYMENT_AMOUNT);
          
          // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
          updateUI();
          
          tgWebApp.showPopup({
            title: '–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞',
            message: '–í–∞—à –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∞–∏—Ä–¥—Ä–æ–ø–µ.',
            buttons: [{ type: 'ok' }]
          });
        }, 2000);
      }
    });
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  async function updateWalletOnServer(walletAddress) {
    try {
      const response = await fetch(`${API_URL}/api/update-wallet`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          user_id: userData.userId,
          wallet_address: walletAddress
        })
      });
      
      const data = await response.json();
      console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', error);
    }
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  async function updatePaymentOnServer(paymentHash, amount) {
    try {
      const response = await fetch(`${API_URL}/api/update-payment`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          user_id: userData.userId,
          payment_hash: paymentHash,
          amount: amount
        })
      });
      
      const data = await response.json();
      console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', error);
    }
  }
  
  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è
  function submitParticipation() {
    if (userData.walletConnected && userData.paymentCompleted) {
      tgWebApp.showPopup({
        title: '–£—á–∞—Å—Ç–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ',
        message: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∞–∏—Ä–¥—Ä–æ–ø–µ —Ç–æ–∫–µ–Ω–∞ NVX. –¢–æ–∫–µ–Ω—ã –±—É–¥—É—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ –∞–∏—Ä–¥—Ä–æ–ø–∞.',
        buttons: [{ type: 'ok' }]
      });
      
      // –ó–∞–∫—Ä—ã—Ç–∏–µ WebApp –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –±–æ—Ç–∞
      setTimeout(() => {
        tgWebApp.close();
      }, 3000);
    }
  }
  
  // –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
  connectWalletBtn.addEventListener('click', connectWallet);
  paymentBtn.addEventListener('click', makePayment);
  submitBtn.addEventListener('click', submitParticipation);
  
  // URL API - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL API
  const API_URL = 'https://your-api-url.com';
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  function initApp() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    fetch(`${API_URL}/api/user-status/${userData.userId}`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          userData.walletConnected = data.data.wallet_connected;
          userData.walletAddress = data.data.wallet_address;
          userData.paymentCompleted = data.data.payment_completed;
          updateUI();
        }
      })
      .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      });
  }
  
  // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  updateUI();
  initApp();
});
